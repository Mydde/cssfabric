/*
 css-fabric 
 grid system
*/

// load scss config file
@use '../../_utils';
// load general config variables 
$_cfg: utils.get_conf();
// load local config variables
$_animation: utils.get_conf_data(animation);



$fabric_attention_props: map-get($_animation, attention_props);
$fabric_in_out_props: map-get($_animation, in_out_props);

@mixin keyframe ($animate_style, $Xm, $Ym, $directionX, $directionY) {

    $moveX: if($Xm==up or $Xm==down, 'translateX', '');
    $moveY: if($Ym==up left $Ym==right, 'translateY', '');

    $keyX: if($directionX, #{$moveX} (#{$directionX}10px), '');
    $keyY: if($directionY, #{$moveY} (#{$directionY}10px), '');

    $keyX_1: if($directionX, #{$moveX} (#{$directionX}400px), '');
    $keyY_2: if($directionY, #{$moveY} (#{$directionY}400px), '');

    $prop: animate-#{$animate_style}-#{$Xm}-#{$Ym};

    // moveX

    .#{$animate_style}_#{$Xm}_#{$Ym}_#{$directionX}_#{$directionY}red {
        dsp: nopne;
    }
}


// up down right left
@function getVectorPropertyObject($vectorDirection) {

    $move: '';
    $direction: '';

    $model: (up:(translation:translateY, direction: '-'),
            down:(translation:translateY, direction: '+'),
            right:(translation:translateX, direction: '+'),
            left:(translation:translateX, direction: '-'));

    $test: map-get($model, $vectorDirection);

    @return (translation:map-get($test, translation), direction:map-get($test, direction));

}

//
@mixin debug($family, $vector, $corner) {

    $vectorProperty: getVectorPropertyObject($vector);
    $cornerProperty: getVectorPropertyObject($corner);

    $vectorMove: map-get($vectorProperty, translation); // 'translate' XY
    $vectorDirection: map-get($vectorProperty, direction); // + || -

    $cornerMove: map-get($cornerProperty, translation); // 'translate' XY
    $cornerDirection: map-get($cornerProperty, direction); // + || -

    .#{$family}-#{$vector}-#{$corner} {
        display: none;
    }
}

// left right down up #{$anim_dir_more}
@each $animate_style in $fabric_in_out_props {

    $treatedDirections: ();

    @each $vectorDirection in(up right down left) {

        $treatedDirections: append($treatedDirections, $vectorDirection);
        //
        @include debug ($animate_style, $vectorDirection, 'null');

        @each $vectorCornerDirection in(up right down left) {

            $alreadyDone: index($treatedDirections, $vectorCornerDirection);

            @if $vectorCornerDirection !=$vectorDirection and not $alreadyDone {

                @if $vectorDirection !=$vectorCornerDirection {
                    //
                    @include debug ($animate_style, $vectorDirection, $vectorCornerDirection);
                }
            }
        }

    }
}
