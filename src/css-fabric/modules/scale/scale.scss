/*
 css-fabric 
 scale  system pointless
*/

// load scss config file
@use '../../_utils';

// load general config variables 
$_cfg: utils.get_conf();
// load local config variables
$_scale: utils.get_conf_data(scale);

// read variables
$_has_dimensions_strict: map-get($_cfg, has_dimensions_strict);  
$_has_dimensions_min: map-get($_cfg, has_dimensions_min);
$_has_dimensions_max: map-get($_cfg, has_dimensions_max);

// media queries sizes, in em  
$_media_quey_sizes: map-get($_cfg, media_quey_sizes);

// dimensions declaration
$scale_size: map-get($_scale, scale_size);
$scale_props: map-get($_scale, scale_props);
$scale_css_values: map-get($_scale, scale_css_values);
$scale_shorthands: map-get($_scale, scale_shorthands);
$scale_defined_sizes: map-get($_scale, scale_defined_sizes);
$scale_grid_ratios: map-get($_scale, scale_grid_ratios); 


/// css dimensions rules builder
@mixin css_dimension_property_builder(
  $scale_prop,
  $size_code,
  $size_value,
  $media_query_code 
) {
  //
  $scale_prop_short: map-get($scale_props, $scale_prop);

  //$property_name: if($media_query_code,#{$scale_prop_short}-#{$media_query_code}-#{$size_code},#{$scale_prop_short}-#{$size_code});
  /*  dimension : "-#{$size_code}" shorthand is #{$size_value} #{$scale_prop}*/
  $tag: if(
    $media_query_code,
    #{$scale_prop_short}-#{$media_query_code}-#{$size_code},
    #{$scale_prop_short}-#{$size_code}
  );
  .#{$tag} {
    #{$scale_prop}: $size_value;

    @if ($_has_dimensions_max) {
      &-max {
        max-#{$scale_prop}: $size_value;
      }
    }
    @if ($_has_dimensions_min) {
      &-min {
        min-#{$scale_prop}: $size_value;
      }
    }
    @if ($_has_dimensions_strict) {
      &-strict {
        #{$scale_prop}: $size_value;
        max-#{$scale_prop}: $size_value;
        min-#{$scale_prop}: $size_value;
      }
    }
  }
}
 

// loop on shorthands
@mixin play_shorthand_loop($scale_prop, $mq_size_key) {
  @each $scale_shorthand, $scale_shorthand_value in $scale_shorthands {
    @include css_dimension_property_builder(
      $scale_prop,
      $scale_shorthand,
      map-get($scale_shorthands, $scale_shorthand),
      $mq_size_key
    );
  }
}

// loop on dimensions
@mixin play_dimensions_loop($scale_prop, $mq_size_key) {
  // loop on dimensions
  @each $scale_css_value in $scale_css_values {
    @include css_dimension_property_builder(
      $scale_prop,
      $scale_css_value,
      $scale_css_value,
      $mq_size_key
    );
  }
}

// loop on defined dimensions
@mixin play_defined_dimensions_loop($scale_prop, $mq_size_key) {
  // loop on defined dimensions
  @each $scale_defined_size in $scale_defined_sizes {
    @include css_dimension_property_builder(
      $scale_prop,
      $scale_defined_size,
      $scale_defined_size + em,
      $mq_size_key
    );
  }
}

// loop on ratio dimensions
@mixin play_ratio_dimensions_loop($scale_prop, $mq_size_key) {
  // loop on ratio dimensions
  @each $dimensions_grid_ratio in $scale_grid_ratios {
    @for $z_value from 1 through $dimensions_grid_ratio {
      @include css_dimension_property_builder(
        $scale_prop,
        $z_value + "-" + $dimensions_grid_ratio,
        (($z_value / $dimensions_grid_ratio) * 100)+#{'%'},
        $mq_size_key
      );
    }
  }
}
 
@each $scale_prop, $scale_prop_short in $scale_props {
  // loop on shorthands
  @include play_shorthand_loop($scale_prop, null);
  // loop on responsive shorthands
  @each $mq_size_key, $mq_size_value in $_media_quey_sizes {
    @include utils.responsive_encloser( 
      $mq_size_value 
    ) {
      @include play_shorthand_loop($scale_prop, $mq_size_key);
    }
  }

  // loop on dimensions
  @include play_dimensions_loop($scale_prop, null);
  // loop on responsive dimensions
  @each $mq_size_key, $mq_size_value in $_media_quey_sizes {
    @include utils.responsive_encloser( 
      $mq_size_value 
    ) {
      @include play_dimensions_loop($scale_prop, $mq_size_key);
    }
  }

  // loop on defined dimensions
  @include play_defined_dimensions_loop($scale_prop, null);
  // loop on responsive defined dimensions
  @each $mq_size_key, $mq_size_value in $_media_quey_sizes {
    @include utils.responsive_encloser( 
      $mq_size_value 
    ) {
      @include play_defined_dimensions_loop($scale_prop, $mq_size_key);
    }
  }

  // loop on ratio dimensions
  @include play_ratio_dimensions_loop($scale_prop, null);
  // loop on responsive ratio dimensions
  @each $mq_size_key, $mq_size_value in $_media_quey_sizes {
    @include utils.responsive_encloser( 
      $mq_size_value 
    ) {
      @include play_ratio_dimensions_loop($scale_prop, $mq_size_key);
    }
  }
}
