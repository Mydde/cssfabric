@use 'theme-vars';
@use "../cssfabric-vars";
@use '../../_utils';

$theme-config: theme-vars.$theme-config;

// COLOR THEME
$moduleNameShort: map-get($theme-config, moduleNameShort);
$color_themes: map-get($theme-config, color);
$color_primary: map-get($color_themes, primary);

@mixin fabric_theme($mq_size_key: null) {
    //
    @each $color-grade in (primary, secondary, tertiary) {

        $switch-color-grad: utils.themeColors($color-grade,$color_primary);
 

        @each $sup in (text, bg, border) {
            $property_key: if($mq_size_key, #{$sup}-#{$mq_size_key}, #{$sup});

            $switch-tag: map-get(
                (
                    text: color,
                    bg: background-color,
                    border: border-color
                ),
                $sup
            ); 

            .#{$moduleNameShort}-#{$property_key}-#{$color-grade} {
                #{$switch-tag}: #{$switch-color-grad};

                @each $colorTint in light lighter dark darker complement invert {
                    $newColor: utils.applyColorEffect($colorTint, $switch-color-grad);

                    @include utils.fabricAttributes("&-", $colorTint, #{$switch-tag}, $newColor);
                }
            }
        }
    }
}

@mixin buildTheme($mq_size_key: null) {
    @include fabric_theme($mq_size_key);
}
